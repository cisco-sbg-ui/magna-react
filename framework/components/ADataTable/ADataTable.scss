@import "../../styles";

$hidden-table-col-width: 45px;

@include theme(a-data-table) using ($theme) {
  &__header {
    &__sort {
      &__button {
        color: map-deep-get($theme, "base", "color");
      }
    }
  }

  &--expandable {
    .a-data-table__row {
      &[data-expandable-row="true"] {
        .a-data-table__cell:nth-last-child(2) {
          border-right-color: map-deep-get($theme, "control", "stroke-color");
        }
      }

      .a-data-table__cell[data-expandable-content] {
        border-color: map-deep-get($theme, "control", "stroke-color");
        background: map-deep-get($theme, "table", "row-hover-color");
      }
    }
  }

  &__row {
    &--selected {
      background: map-deep-get($theme, "table", "row-selected");

      &:hover {
        // todo - update ASimpleTable scss declarations to use BEM so that
        // its specificity isn't overpowering styles in here
        background: map-deep-get($theme, "table", "row-selected") !important;
      }
    }
  }
}

.a-data-table {
  &__header {
    &__sort {
      &__button {
        outline: none;
        font-family: inherit !important;
        font-weight: inherit !important;
        font-style: inherit !important;
        font-size: inherit !important;
        border: none;
        padding: 0;
        margin: 0;
        background: transparent;
        cursor: pointer;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        width: inherit;
      }
      &.a-icon {
        vertical-align: middle;
        width: 18px;
      }
    }
  }

  &__headerWrap {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .text-start {
    text-align: start;
  }

  .text-center {
    text-align: center;
  }

  .text-end {
    text-align: end;
  }

  &--expandable {
    & .a-data-table__thead .a-data-table__row {
      flex-wrap: nowrap;

      & .a-data-table__header {
        border-bottom: 0px;

        &:not(:nth-last-child(2)) {
          border-right: 0px;
        }
      }
    }
    & .a-data-table__row {
      display: flex;
      flex-flow: row wrap;
      height: 100%;
      min-height: 30px;

      & .a-data-table__header {
        flex: 1;
        line-height: 200%;

        &--hidden {
          border-right: none;
          padding: 0;
          min-width: $hidden-table-col-width;
          flex-basis: 0;
          flex-grow: 0;

          &__text {
            @include sr-only;
          }
        }

        &:nth-child(2) {
          border-left: none;
          padding-left: 0;
        }

        &:last-of-type {
          position: absolute;
          height: 1px;
          width: 1px;
          overflow: hidden;
          clip: rect(1px 1px 1px 1px);
          clip: rect(1px, 1px, 1px, 1px);
        }
      }

      & .a-data-table__cell {
        display: block;
        flex: 1;
        line-height: 200%;

        &:first-child {
          flex: 0;
          display: flex;
          align-items: center;
          min-width: $hidden-table-col-width;
          padding: 0;
        }

        & .a-data-table__cell__btn--expand {
          cursor: pointer;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
          width: 100%;
          height: 100%;
          background: transparent;
          border: none;
          color: unset;
          font-family: inherit;
        }

        &:nth-child(2) {
          padding-left: 0;
        }

        &:last-child[data-expandable-content] {
          display: block;
          padding: 0 $hidden-table-col-width;
          visibility: visible;
          overflow: hidden;
          max-height: 600px;
          opacity: 1;
          flex-basis: 100%;

          &[hidden] {
            max-height: 0;
            visibility: hidden;
            opacity: 0;
            border: unset;
          }
        }
      }
    }
  }
}
