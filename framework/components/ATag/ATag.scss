@import "../../styles";

$tag-height: 26px;
$tag-height-sm: 20px;
$tag-height-lg: 28px;
$tag-padding: 4px 12px;
$tag-padding-sm: 0 8px;
$tag-font-size: $font-size--sm;
$tag-font-size-lg: $font-size--md;
$tag-line-height: calc($font-size--sm + 6px);
$tag-line-height-lg: calc($font-size--md + 6px);
$tag-border-radius: 17px;
$tag-icon-font-size: $font-size--sm;
$tag-icon-font-size-sm: $font-size--xs;
$tag-font-weight: 600;
$icon-width: 1.167rem;

$colors: "A", "B", "C", "D", "E", "F", "G", "H", "I", "K";

@include theme(a-tag) using ($theme) {
  background-color: map-deep-get($theme, "tag", "bg-color");
  color: map-deep-get($theme, "tag", "color");

  &.interactable {
    cursor: pointer;

    &:hover,
    &:focus {
      color: map-deep-get($theme, "tag", "color");
    }
  }

  &--state-information,
  &--state-info,
  &--binary-active {
    background-color: var(--control-bg-medium-active);
    color: var(--base-text-default);
  }

  &--status-positive {
    background-color: var(--positive-bg-strong-default);
    color: var(--base-text-default);
  }
  &--status-warning {
    background-color: var(--warning-bg-strong-default);
    color: var(--base-text-default);
  }
  &--status-negative {
    background-color: var(--negative-bg-strong-default);
    color: var(--base-text-default);
  }

  @each $accent in $colors {
    &--accent#{$accent} {
      background-color: map-deep-get(
        $theme,
        "accent-colors",
        "accent#{$accent}"
      );
    }
  }

  //binary check icon override
  &--binary-active {
    .a-icon--check-circle circle {
      fill: var(--info-border-default) !important;
      stroke: var(--info-border-default) !important;
    }
  }

  .a-icon {
    &--check-circle,
    &--x-circle,
    &--minus-circle {
      line,
      polyline {
        stroke: var(--base-icon-in-default);
      }
    }
    &--check-circle circle {
      fill: var(--positive-border-default);
      stroke: var(--positive-border-default);
    }
    &--warning-circle {
      stroke: map-get($mds-neutral, "neutral-14");
      fill: map-get($mds-neutral, "neutral-14");
      circle:first-of-type {
        fill: var(--warning-border-default);
        stroke: var(--warning-border-default);
      }
    }
    &--x-circle circle {
      fill: var(--negative-border-default);
      stroke: var(--negative-border-default);
    }
    &--minus-circle circle,
    &--prohibit {
      stroke: var(--base-text-medium-default);
      fill: var(--base-text-medium-default);
    }
  }
}

.a-tag {
  display: inline-flex;
  font-size: $tag-font-size;
  min-height: $tag-height;
  line-height: $tag-line-height;
  align-items: center;
  padding: $tag-padding;
  border-radius: $tag-border-radius;
  vertical-align: middle;
  word-break: break-all;
  cursor: default;
  font-weight: $tag-font-weight;

  &.interactable {
    cursor: pointer;

    &:hover,
    &:focus {
      text-decoration: none;
    }
  }
  div {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  //Size management for any provided icons
  .a-icon {
    width: 14px;
    stroke: currentColor;
    fill: currentColor;
  }
  &--sm {
    .a-icon {
      width: 12px;
    }
  }
  &--lg {
    .a-icon {
      width: 16px;
    }
  }

  //Status & binary tags
  &--status {
    .a-icon--status {
      width: calc(
        $tag-icon-font-size * 1.334
      ); // 14px for circle - svg needs to be larger as phosphorus circle does not reach edges
    }
    padding-left: 6px;
    padding-right: 8px;
    + .a-tag--lg {
      padding-right: 12px;
    }
  }

  &--sm {
    min-height: $tag-height-sm;
    padding: $tag-padding-sm;

    .a-icon--status {
      width: calc($tag-icon-font-size * 1.143); //12px phosphorus circle
    }
  }

  &--lg {
    min-height: $tag-height-lg;
    font-size: $tag-font-size-lg;
    line-height: $tag-line-height-lg;
    .a-icon--status {
      width: calc($tag-icon-font-size * 1.524); //16px phosphorus circle
    }
  }
}
